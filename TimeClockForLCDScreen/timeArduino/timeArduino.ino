/* Notes: You need a RTC (Real Time Clock) chip in order to keep track of the time.  // This code doesnt use an RTC chip, so you have to manually set   // the time every time you power on the device.   // Note: You need buttons in order to set the time. Budget is low.. // Could possibly not do this by connecting via bluetooth.  NOTE TO SELF (1/27/21): The variables seconds, minutes and hours work. The lcdSeconds, lcdMinutes and lcdHours do not work. The lcdHours keeps incrementing because the minutes stay at 0, and the lcdSeconds will go through the  entire ascii library until its exhausted. It has been commented out. *//*// Resources// https://www.pjrc.com/teensy/td_libs_Time.html// https://github.com/PaulStoffregen/Time*///LCD SCREEN CODE/*// Including Arduino LCD libraries #include <TFT.h>  // Arduino LCD library#include <SPI.h>// Setting pin definitions as defined within our "LCD screen"#define cs   3#define dc   5#define rst  4// Create an instance of the LCD screen// Provide pin locations for cs, dc and rst according to prototype. TFT lcd_screen = TFT(cs, dc, rst);*/// Variables to display for the LCD Screenchar lcdSeconds = '0'; // Set to 0 initiallychar lcdMinutes = '0';char lcdHours = '0';#include <TimeLib.h>const int ledPin = LED_BUILTIN; // set ledPin to on-board LEDconst int buttonPin = 4; // set buttonPin to digital pin 4 time_t initialTime; // Create the variable which will contain the initial time int seconds = 0; int minutes = 0; int hours = 0;   int flag = 0; // Flag used to not increment minutes (and possibly hours) upon program startup    // Custom function to delay for 'x' amount of secondsvoid delayFunction(int a){  int b = a * 1000;  delay(b);}// Custom function for blinking.void blink(int a){  int b = 1;  while (b <= a){    digitalWrite(ledPin, HIGH);    delay(1000);    digitalWrite(ledPin, LOW);    b++;  }  delay(5000); // Wait 5 seconds before doing next sec. }// https://stackoverflow.com/questions/2279379/how-to-convert-integer-to-char-in-c// Adding 0 to the int will convert it to its character form.char intToCharacter(int a){    int b = a;  char returnThis = b + '0';  return returnThis;  }//https://www.geeksforgeeks.org/convert-char-to-int-in-java-with-examples///https://www.geeksforgeeks.org/convert-char-to-int-in-java-with-examples/// INTEGER TO CHARint charToInteger(int a){  int returnThis = a - '0';  return returnThis;}// Increment the LCD character by 1;char incrementChar(char a){  int b = charToInteger(a);  b = b+1;  char returnThis = intToCharacter(b);  return returnThis;}/*setup() only runs once. Use it to setup any variables and setup any libraries, and the like. */void setup() {  Serial.begin(9600);  initialTime = now(); // Get the time upon start up  pinMode(ledPin, OUTPUT); // use the LED as an output  pinMode(buttonPin, INPUT); // use button pin as an input}/*The program that will run continously*/void loop() {        delay(1000); // wait one sec  initialTime = now();  seconds = second(initialTime); // Update the second.  minutes = minute(initialTime); // Update the minute.  hours = hour(initialTime);     // Update the h o u r.    lcdSeconds = incrementChar(lcdSeconds); // the lcd_screen.text only takes text as input  //lcd_screen.text(lcdSeconds, 0, 20); Test it when you get the screen and fix the library compilation problem for its libraries    //Refer to  NOTE TO SELF (1/27/21) on top  /*  if (flag == 1)  {    if (seconds == 0){      lcdMinutes = incrementChar(lcdMinutes);    }      if (minutes == 0){      lcdHours = incrementChar(lcdHours);    }  }  */            // Printing into the Arduino Monitor for testing/debugging purposes    //Printing the seconds  Serial.print("Seconds: ");  Serial.println(seconds);    //Printing the minutes  Serial.print("Minutes: ");  Serial.println(minutes);    //Printing the hours  Serial.print("Hours: ");  Serial.println(hours);  Serial.println(); // Printing newline.     // Refer to  NOTE TO SELF (1/27/21) on top  /*  //Printing the LCD values  Serial.print("LCD Seconds: ");  Serial.println(lcdSeconds);    Serial.print("LCD Minutes: ");  Serial.println(lcdMinutes);    Serial.print("LCD Hours: ");  Serial.println(lcdHours);  */      flag = 1; // Set flag to 1, start incrementing the minutes (and possibly hours).  }// OLD CODE// Code inside during the winter break. //if (previous != seconds){//    Serial.println(seconds); //  }  //  else if (seconds == 1){//    Serial.println(seconds); //  }   //  initialTime = now();//  seconds = second(initialTime); // Update the second.//  previous = seconds;     //   Serial.println(seconds); //   blink(seconds);     //   initialTime = now(); //   seconds = second(initialTime); // Update the second.    